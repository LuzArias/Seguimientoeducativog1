// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SegEducativo.App.Persistencia;

namespace SegEducativo.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    partial class AppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("SegEducativo.App.Dominio.Grupo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Grupo");
                });

            modelBuilder.Entity("SegEducativo.App.Dominio.Materia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Materias");
                });

            modelBuilder.Entity("SegEducativo.App.Dominio.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Genero")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Persona");
                });

            modelBuilder.Entity("SegEducativo.App.Dominio.Acudiente", b =>
                {
                    b.HasBaseType("SegEducativo.App.Dominio.Persona");

                    b.Property<string>("Parentesco")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Acudientes");
                });

            modelBuilder.Entity("SegEducativo.App.Dominio.Estudiante", b =>
                {
                    b.HasBaseType("SegEducativo.App.Dominio.Persona");

                    b.Property<int>("Acudiente_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("Materia_id")
                        .HasColumnType("int");

                    b.Property<int?>("ProfesorId")
                        .HasColumnType("int");

                    b.HasIndex("Acudiente_id");

                    b.HasIndex("Materia_id");

                    b.HasIndex("ProfesorId");

                    b.ToTable("Estudiantes");
                });

            modelBuilder.Entity("SegEducativo.App.Dominio.Profesor", b =>
                {
                    b.HasBaseType("SegEducativo.App.Dominio.Persona");

                    b.Property<int>("Grupo_id")
                        .HasColumnType("int");

                    b.HasIndex("Grupo_id");

                    b.ToTable("Profesores");
                });

            modelBuilder.Entity("SegEducativo.App.Dominio.Acudiente", b =>
                {
                    b.HasOne("SegEducativo.App.Dominio.Persona", null)
                        .WithOne()
                        .HasForeignKey("SegEducativo.App.Dominio.Acudiente", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SegEducativo.App.Dominio.Estudiante", b =>
                {
                    b.HasOne("SegEducativo.App.Dominio.Acudiente", "Acudiente")
                        .WithMany()
                        .HasForeignKey("Acudiente_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SegEducativo.App.Dominio.Persona", null)
                        .WithOne()
                        .HasForeignKey("SegEducativo.App.Dominio.Estudiante", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("SegEducativo.App.Dominio.Materia", "Materia")
                        .WithMany()
                        .HasForeignKey("Materia_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SegEducativo.App.Dominio.Profesor", null)
                        .WithMany("Estudiantes")
                        .HasForeignKey("ProfesorId");

                    b.Navigation("Acudiente");

                    b.Navigation("Materia");
                });

            modelBuilder.Entity("SegEducativo.App.Dominio.Profesor", b =>
                {
                    b.HasOne("SegEducativo.App.Dominio.Grupo", "Grupo")
                        .WithMany()
                        .HasForeignKey("Grupo_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SegEducativo.App.Dominio.Persona", null)
                        .WithOne()
                        .HasForeignKey("SegEducativo.App.Dominio.Profesor", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Grupo");
                });

            modelBuilder.Entity("SegEducativo.App.Dominio.Profesor", b =>
                {
                    b.Navigation("Estudiantes");
                });
#pragma warning restore 612, 618
        }
    }
}
